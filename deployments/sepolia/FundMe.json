{
  "address": "0x15423c6A1Fa00F967a31f47f017B572120bAC81C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb813efdc5179b8c8eb92fbab20d2c4c6f320241a082a73f28cf1d5550dfdc127",
  "receipt": {
    "to": null,
    "from": "0xEB4279D4004551Fcc481CA5F86c803208EE95091",
    "contractAddress": "0x15423c6A1Fa00F967a31f47f017B572120bAC81C",
    "transactionIndex": 63,
    "gasUsed": "849166",
    "logsBloom": "0x
    "blockHash": "0x97c5b827a76239fd88a4b90c9a26e433f57e1fb30b857814dcf23558130a5c7d",
    "transactionHash": "0xb813efdc5179b8c8eb92fbab20d2c4c6f320241a082a73f28cf1d5550dfdc127",
    "logs": [],
    "blockNumber": 4242056,
    "cumulativeGasUsed": "9918255",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x42585eD362B3f1BCa95c640FdFf35Ef899212734"
  ],
  "numDeployments": 1,
  "solcInputHash": "b8ae9224af5bf3dd4d8e2789d08db7fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"./PriceCoverter.sol\\\";\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINM_USD = 50 * 1e18; // for gas optimization as they don't get stored like storage data types\\n    // blockchain nodes cannot make HTTP calls so we need a decentralized network\\n    address[] public funders;\\n    // to check how much money does user send (below code)\\n    mapping(address => uint256) public addressToAmmountFunded;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // require-revert\\n        // require is like if-else\\n        // though I haven't send any params still it will run as it will expect msg.value as it's 1st param\\n        require(\\n            (msg.value.getConversionRate(priceFeed)) >= MINM_USD,\\n            \\\"Didn't send enogh !!!\\\"\\n        );\\n        addressToAmmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender); // msg.sender means whatever address is sending the money.\\n        // emit Funded(msg.sender, msg.value);\\n    }\\n\\n    address public immutable i_owner; // for gas optimization as they don't get stored like storage data types\\n    AggregatorV3Interface public priceFeed;\\n\\n    function withdraw() public {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmmountFunded[funder] = 0;\\n        }\\n        // resetting the array\\n        funders = new address[](0);\\n        // Sending ETH from a Contract\\n        // transfer\\n        // msg.sender = address\\n        // payable(msg.sender) = payable address\\n        // to send ETH we need payable address.\\n        // payable(msg.sender).transfer(address(this).balance); this throws error\\n        // send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require((sendSuccess), \\\"Failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Calling Failed\\\");\\n        revert();\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner,\\\"sender isnot owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _; // doing the rest of the code...\\n    }\\n\\n    // if someone wants to send ETH without the proper func call..in this case fund() then\\n    // receive() -> no need to write func ib bn front as solidity knows that it's a special func\\n    // fallback()\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n// Libraries are similar to contracts..cann't send ethers...\\n\",\"keccak256\":\"0xe6b172c6731558cbd9a0ad350acae352bee4b056e9ecaf76f08b7ee37d40d8af\",\"license\":\"MIT\"},\"contracts/PriceCoverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// npm i @chainlink/contracts\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    // all the functions are internal...cannot declare any state variable or cannot send any ether...\\r\\n\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Sepolia ETH / USD Address\\r\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 1e10);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x9f0357e0f04e28034513b50724993a2b278e709c4a9eec8b139e5e1e4d38b63a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f51380380610f5183398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610df961015860003960006105670152610df96000f3fe6080604052600436106100745760003560e01c80639d68f2691161004e5780639d68f269146100fa578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d578063741bef1a146100a4578063934cdf99146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100b961051a565b6040516100c691906107bb565b60405180910390f35b3480156100db57600080fd5b506100e4610540565b6040516100f191906107ef565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c919061084d565b61054d565b60405161012e91906107ef565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610565565b6040516101639190610889565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d0565b610589565b6040516101a09190610889565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095a565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027891906109a9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60005b60008054905081101561038f576000808281548110610309576103086109dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061038790610a0c565b9150506102e7565b50600067ffffffffffffffff8111156103ab576103aa610a54565b5b6040519080825280602002602001820160405280156103d95781602001602082028036833780820191505090505b50600090805190602001906103ef929190610695565b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090610acf565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610b20565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b81565b60405180910390fd5b600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610ba1565b6105f79190610c12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106769190610cd0565b5050509150506402540be4008161068d9190610d4b565b915050919050565b82805482825590600052602060002090810192821561070e579160200282015b8281111561070d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b5565b5b50905061071b919061071f565b5090565b5b80821115610738576000816000905550600101610720565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061078161077c6107778461073c565b61075c565b61073c565b9050919050565b600061079382610766565b9050919050565b60006107a582610788565b9050919050565b6107b58161079a565b82525050565b60006020820190506107d060008301846107ac565b92915050565b6000819050919050565b6107e9816107d6565b82525050565b600060208201905061080460008301846107e0565b92915050565b600080fd5b600061081a8261073c565b9050919050565b61082a8161080f565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b6000602082840312156108635761086261080a565b5b600061087184828501610838565b91505092915050565b6108838161080f565b82525050565b600060208201905061089e600083018461087a565b92915050565b6108ad816107d6565b81146108b857600080fd5b50565b6000813590506108ca816108a4565b92915050565b6000602082840312156108e6576108e561080a565b5b60006108f4848285016108bb565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f6768202121210000000000000000000000600082015250565b60006109446015836108fd565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b4826107d6565b91506109bf836107d6565b92508282019050808211156109d7576109d661097a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a17826107d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a4957610a4861097a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4661696c65640000000000000000000000000000000000000000000000000000600082015250565b6000610ab96006836108fd565b9150610ac482610a83565b602082019050919050565b60006020820190508181036000830152610ae881610aac565b9050919050565b600081905092915050565b50565b6000610b0a600083610aef565b9150610b1582610afa565b600082019050919050565b6000610b2b82610afd565b9150819050919050565b7f43616c6c696e67204661696c6564000000000000000000000000000000000000600082015250565b6000610b6b600e836108fd565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b6000610bac826107d6565b9150610bb7836107d6565b9250828202610bc5816107d6565b91508282048414831517610bdc57610bdb61097a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1d826107d6565b9150610c28836107d6565b925082610c3857610c37610be3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6281610c43565b8114610c6d57600080fd5b50565b600081519050610c7f81610c59565b92915050565b6000819050919050565b610c9881610c85565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b600081519050610cca816108a4565b92915050565b600080600080600060a08688031215610cec57610ceb61080a565b5b6000610cfa88828901610c70565b9550506020610d0b88828901610ca6565b9450506040610d1c88828901610cbb565b9350506060610d2d88828901610cbb565b9250506080610d3e88828901610c70565b9150509295509295909350565b6000610d5682610c85565b9150610d6183610c85565b9250828202610d6f81610c85565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610da757610da661097a565b5b8282058414831517610dbc57610dbb61097a565b5b509291505056fea2646970667358221220af44a597adb2eeb91dfbd844dd559b71797ee73b73ebdf783d7f219e390bf31964736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639d68f2691161004e5780639d68f269146100fa578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d578063741bef1a146100a4578063934cdf99146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e4565b005b3480156100b057600080fd5b506100b961051a565b6040516100c691906107bb565b60405180910390f35b3480156100db57600080fd5b506100e4610540565b6040516100f191906107ef565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c919061084d565b61054d565b60405161012e91906107ef565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610565565b6040516101639190610889565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d0565b610589565b6040516101a09190610889565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095a565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027891906109a9565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60005b60008054905081101561038f576000808281548110610309576103086109dd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061038790610a0c565b9150506102e7565b50600067ffffffffffffffff8111156103ab576103aa610a54565b5b6040519080825280602002602001820160405280156103d95781602001602082028036833780820191505090505b50600090805190602001906103ef929190610695565b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090610acf565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610b20565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610b81565b60405180910390fd5b600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610ba1565b6105f79190610c12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106769190610cd0565b5050509150506402540be4008161068d9190610d4b565b915050919050565b82805482825590600052602060002090810192821561070e579160200282015b8281111561070d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b5565b5b50905061071b919061071f565b5090565b5b80821115610738576000816000905550600101610720565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061078161077c6107778461073c565b61075c565b61073c565b9050919050565b600061079382610766565b9050919050565b60006107a582610788565b9050919050565b6107b58161079a565b82525050565b60006020820190506107d060008301846107ac565b92915050565b6000819050919050565b6107e9816107d6565b82525050565b600060208201905061080460008301846107e0565b92915050565b600080fd5b600061081a8261073c565b9050919050565b61082a8161080f565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b6000602082840312156108635761086261080a565b5b600061087184828501610838565b91505092915050565b6108838161080f565b82525050565b600060208201905061089e600083018461087a565b92915050565b6108ad816107d6565b81146108b857600080fd5b50565b6000813590506108ca816108a4565b92915050565b6000602082840312156108e6576108e561080a565b5b60006108f4848285016108bb565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f6768202121210000000000000000000000600082015250565b60006109446015836108fd565b915061094f8261090e565b602082019050919050565b6000602082019050818103600083015261097381610937565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109b4826107d6565b91506109bf836107d6565b92508282019050808211156109d7576109d661097a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a17826107d6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a4957610a4861097a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4661696c65640000000000000000000000000000000000000000000000000000600082015250565b6000610ab96006836108fd565b9150610ac482610a83565b602082019050919050565b60006020820190508181036000830152610ae881610aac565b9050919050565b600081905092915050565b50565b6000610b0a600083610aef565b9150610b1582610afa565b600082019050919050565b6000610b2b82610afd565b9150819050919050565b7f43616c6c696e67204661696c6564000000000000000000000000000000000000600082015250565b6000610b6b600e836108fd565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b6000610bac826107d6565b9150610bb7836107d6565b9250828202610bc5816107d6565b91508282048414831517610bdc57610bdb61097a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1d826107d6565b9150610c28836107d6565b925082610c3857610c37610be3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6281610c43565b8114610c6d57600080fd5b50565b600081519050610c7f81610c59565b92915050565b6000819050919050565b610c9881610c85565b8114610ca357600080fd5b50565b600081519050610cb581610c8f565b92915050565b600081519050610cca816108a4565b92915050565b600080600080600060a08688031215610cec57610ceb61080a565b5b6000610cfa88828901610c70565b9550506020610d0b88828901610ca6565b9450506040610d1c88828901610cbb565b9350506060610d2d88828901610cbb565b9250506080610d3e88828901610c70565b9150509295509295909350565b6000610d5682610c85565b9150610d6183610c85565b9250828202610d6f81610c85565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610da757610da661097a565b5b8282058414831517610dbc57610dbb61097a565b5b509291505056fea2646970667358221220af44a597adb2eeb91dfbd844dd559b71797ee73b73ebdf783d7f219e390bf31964736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 118,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}